/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Visao;

import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import projetodb.projetoa3sql.Conexao;

/**
 *
 * @author maria
 */
public class relatorioFerramenta extends javax.swing.JFrame {

    /**
     * Creates new form relatorioFerramenta
     */
    public relatorioFerramenta() {
        initComponents();
        calcularTotalCusto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        toolsTable = new javax.swing.JTable();
        totalCostLabel = new javax.swing.JLabel();
        AtualizarBD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatório de Ferramentas e Custo Total de Aquisição");
        setResizable(false);

        toolsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "", "", null},
                {null, "", "", null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Marca", "Custo de Aquisição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        toolsTable.setShowGrid(true);
        jScrollPane1.setViewportView(toolsTable);

        totalCostLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        totalCostLabel.setText("Total de Custo: R$ 0.00");

        AtualizarBD.setText("Atualizar banco de dados");
        AtualizarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarBDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(totalCostLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(AtualizarBD)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(AtualizarBD)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(totalCostLabel)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AtualizarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarBDActionPerformed
      try {
    // 1. Estabelecer conexão com o banco de dados
    Connection conexao = Conexao.conectar();

    // 2. Escrever a consulta SQL para selecionar os dados das ferramentas
    String sql = "SELECT id_ferramenta, nome_ferramenta, marca_ferramenta, preco FROM ferramentas";

    // 3. Executar a consulta SQL
    try (PreparedStatement pstmt = conexao.prepareStatement(sql)) {
        ResultSet rs = pstmt.executeQuery();

        // Limpar a tabela antes de adicionar novos dados
        DefaultTableModel model = (DefaultTableModel) toolsTable.getModel();
        model.setRowCount(0);

        // Processar os resultados e preencher a tabela de ferramentas
        while (rs.next()) {
            int id = rs.getInt("id_ferramenta");
            String nome = rs.getString("nome_ferramenta");
            String marca = rs.getString("marca_ferramenta");
            double preco = rs.getDouble("preco");

            Object[] rowData = {id, nome, marca, preco};
            model.addRow(rowData);
        }

        // 4. Calcular o custo total
        calcularTotalCusto();
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Erro ao recuperar dados das ferramentas: " + e.getMessage());
}

    }//GEN-LAST:event_AtualizarBDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(relatorioFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(relatorioFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(relatorioFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(relatorioFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new relatorioFerramenta().setVisible(true);
            }
        });
    }

    private void calcularTotalCusto() {
        DefaultTableModel model = (DefaultTableModel) toolsTable.getModel();
        double totalCost = 0;
        
        for (int i = 0; i < model.getRowCount(); i++) {
            Object costValue = model.getValueAt(i, 3);
            if (costValue != null) {
                // Converte o valor para Double se necessário
                try {
                    totalCost += Double.parseDouble(costValue.toString());
                } catch (NumberFormatException e) {
                    // Trate a exceção se o valor não puder ser convertido
                    System.err.println("Valor de custo inválido na linha " + (i + 1));
                }
            }
        }
        
        totalCostLabel.setText("Total de Custo: R$ " + String.format("%.2f", totalCost));
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AtualizarBD;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable toolsTable;
    private javax.swing.JLabel totalCostLabel;
    // End of variables declaration//GEN-END:variables

    
    
}
