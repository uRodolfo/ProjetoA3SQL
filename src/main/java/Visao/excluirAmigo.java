/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Visao;


import javax.swing.JTextField; 
import projetodb.projetoa3sql.Conexao;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import Controle.AmigosControle;
import DAO.AmigosDAO;
import Modelo.Amigos;
import projetodb.projetoa3sql.Conexao;
import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JTextField;

/**
 *
 * @author maria
 */
public class excluirAmigo extends javax.swing.JFrame {
private Connection conexao;
    private JTextField JTFAmigo;
    private JTextField JTFID;
    
    public excluirAmigo() {
        initComponents();
        JTFAmigo = new JTextField(); 
         JTFID = new JTextField(); // Inicialize JTFID aqui
        try {
            
           
            conexao = Conexao.conectar();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao conectar ao banco de dados: " + e.getMessage());
        }
    }

    // Restante do código da classe...

    // Restante do código da classe...

  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxAmigos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        atualizarBD = new javax.swing.JButton();
        comboBoxId = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Excluir Amigo");

        comboBoxAmigos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxAmigosActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Selecione um amigo:");

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        atualizarBD.setText("Atualizar Banco de Dados");
        atualizarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarBDActionPerformed(evt);
            }
        });

        comboBoxId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxIdActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Selecione o ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(comboBoxAmigos, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxId, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(atualizarBD))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(btnExcluir)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(atualizarBD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboBoxAmigos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(comboBoxId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnExcluir)
                .addGap(56, 56, 56))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
     String amigoSelecionado = (String) comboBoxAmigos.getSelectedItem();
        String idSelecionado = (String) comboBoxId.getSelectedItem();
        if (amigoSelecionado != null && idSelecionado != null) {
            try {
                String sql = "DELETE FROM amigos WHERE id_usuario = ? AND nome_usuario = ?";
                try (PreparedStatement stmt = conexao.prepareStatement(sql)) {
                    stmt.setInt(1, Integer.parseInt(idSelecionado));
                    stmt.setString(2, amigoSelecionado);
                    int rowsAffected = stmt.executeUpdate();
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Amigo excluído com sucesso.");
                        comboBoxAmigos.removeItem(amigoSelecionado);
                        comboBoxId.removeItem(idSelecionado);
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao excluir amigo.");
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao excluir amigo: " + ex.getMessage());
            }
        }
    
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void comboBoxAmigosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxAmigosActionPerformed
      String nomeSelecionado = (String) comboBoxAmigos.getSelectedItem(); 
    JTFAmigo.setText(nomeSelecionado);
    }//GEN-LAST:event_comboBoxAmigosActionPerformed

    private void atualizarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarBDActionPerformed
       updateCombo();
    }//GEN-LAST:event_atualizarBDActionPerformed

    private void comboBoxIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxIdActionPerformed
        String idSelecionado = (String) comboBoxId.getSelectedItem(); 
    JTFID.setText(idSelecionado);
    }//GEN-LAST:event_comboBoxIdActionPerformed
public void updateCombo() {
           System.out.println("Atualizando ComboBox");
    
    String sqlNomes = "SELECT nome_usuario FROM amigos"; // Seleciona os nomes dos amigos
    String sqlIds = "SELECT id_usuario FROM amigos"; // Seleciona os IDs dos amigos

    try {
        // Atualizando a comboBoxAmigos com os nomes dos amigos
        try (PreparedStatement pstNomes = conexao.prepareStatement(sqlNomes);
             ResultSet rsNomes = pstNomes.executeQuery()) {
            
            comboBoxAmigos.removeAllItems(); // Limpar os itens existentes na combobox
            while (rsNomes.next()) {
                String nome = rsNomes.getString("nome_usuario");
                System.out.println("Adicionando nome: " + nome);
                comboBoxAmigos.addItem(nome);
            }
        }

        // Atualizando a comboBoxId com os IDs dos amigos
        try (PreparedStatement pstIds = conexao.prepareStatement(sqlIds);
             ResultSet rsIds = pstIds.executeQuery()) {
            
            comboBoxId.removeAllItems(); // Limpar os itens existentes na combobox
            while (rsIds.next()) {
                int id = rsIds.getInt("id_usuario");
                System.out.println("Adicionando ID: " + id);
                comboBoxId.addItem(String.valueOf(id));
            }
        }   
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar amigos: " + e.getMessage());
    }

}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(excluirAmigo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(excluirAmigo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(excluirAmigo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(excluirAmigo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new excluirAmigo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizarBD;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JComboBox<String> comboBoxAmigos;
    private javax.swing.JComboBox<String> comboBoxId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
